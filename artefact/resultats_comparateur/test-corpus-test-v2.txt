Test 3

acl2012.xml : 87.28% |

b0e5c43edf116ce2909ae009cc27a1546f09.xml : 82.88% |

BLESS.xml : 92.43%

C14-1212.xml : 83.31%

Guy.xml : 49.62%

infoEmbeddings.xml : 73.92%

IPM1481.xml : NA

L18-1504.xml : 70.53%

On_the_Morality_of_Artificial_Intelligence.xml OutputReferenceTest/On_the_Morality_of_Artificial_Intelligence.xml : 52.22%

surveyTermExtraction.xml OutputReferenceTest/surveyTermExtraction.xml : 46.77%

total : 63.9%



    """
    fonction qui retourne la conclusion
    input : path et un paramtre qui dit si on veut la conclusion ou la discussion
    output : conclusion en string
    """
    def find_discussion(self) :
        result = ""
        b = True
        pattern = re.compile(r'iscussion')
        pat1 = re.compile(r'onclusion')
        font = self.findIntroBlock()[2]
        size = self.findIntroBlock()[1]
        for page in self.pages :
            blocks = page.get_text('dict')['blocks']
            for block in blocks :
                if self.skipable(block) :
                    for line in block['lines'] :                           
                        for span in line['spans'] :
                            if font == span['font'] : #and size == span['size'] :
                                matches = pattern.findall(span['text'].lower())
                                if matches :
                                    b = False
                                if (pat1.findall(span['text'].lower())) :
                                    b = True
                                else :
                                    pat1 = re.compile(r'eference')
                                    if (pat1.findall(span['text'].lower())) :
                                        b = True
                            if b == False :
                                result += " " + span['text']
        result = result.replace("&","&amp;").replace("<", "&lt;").replace(">", "&gt;")
        if result == "" :
            result = "N/A"
        return result
